{
    "docs": [
        {
            "location": "/", 
            "text": "Airavata Is....\n\n\n\n\nA distributed framework that supports execution and management of computational scientific applications and workflows in grid based systems, remote clusters and cloud based systems.\n\n\nAiravata\u2019s main focus is on submitting and managing application executions and workflows in grid based systems.\n\n\nAiravata\u2019s architecture is extensible to support for other underlying resources as well.\n\n\nTraditional scientific applications provide a portal for users to submit and manage scientific applications which is called as science gateways.\n\n\nAiravata can be used by scientific gateway developers as their middleware layer. They can directly call Airavata API in order to communicate with grid based system.\n\n\n\n\nFor more information on Airavata visit; \nApache Airavata\n\n\n\n\n\n\nHow do you want to use Airavata?\n\n\nTwo options; \n\n1. \nGateway hosted by SciGaP\n\n    - Provided you have your own allocation you can use all compute resource available within Airavata.\n\n    - SciGaP will host your Gateway, WSO2 IS (gateway user account management), MySQL DB for you in SciGaP servers.\n\n    - For this option contact us through \n\n    \n\nFor more information on SciGaP visit; \nSciGaP\n\n\n\n\n2. \nGateway hosted by User\n\n    - You have to install all pre requisites such as RabbitMQ, My SQL, etc\n\n    - User installs and hosts Airavata, PGA and WSO2 IS on own servers.\n\n    - Configure and register all compute resources, Gateway configuration on your own\n\n    - Start from \nInstallations Page\n\n\nBased on the option you select the level of assistance you receive from Airavata group will differ. \n\nSciGaP or Airavata team will always act as the consultants to science communities and users who are looking out for middleware and gateways.", 
            "title": "Home"
        }, 
        {
            "location": "/#airavata-is", 
            "text": "A distributed framework that supports execution and management of computational scientific applications and workflows in grid based systems, remote clusters and cloud based systems.  Airavata\u2019s main focus is on submitting and managing application executions and workflows in grid based systems.  Airavata\u2019s architecture is extensible to support for other underlying resources as well.  Traditional scientific applications provide a portal for users to submit and manage scientific applications which is called as science gateways.  Airavata can be used by scientific gateway developers as their middleware layer. They can directly call Airavata API in order to communicate with grid based system.   For more information on Airavata visit;  Apache Airavata", 
            "title": "Airavata Is...."
        }, 
        {
            "location": "/#how-do-you-want-to-use-airavata", 
            "text": "Two options;  \n1.  Gateway hosted by SciGaP \n    - Provided you have your own allocation you can use all compute resource available within Airavata. \n    - SciGaP will host your Gateway, WSO2 IS (gateway user account management), MySQL DB for you in SciGaP servers. \n    - For this option contact us through  \n     \nFor more information on SciGaP visit;  SciGaP   2.  Gateway hosted by User \n    - You have to install all pre requisites such as RabbitMQ, My SQL, etc \n    - User installs and hosts Airavata, PGA and WSO2 IS on own servers. \n    - Configure and register all compute resources, Gateway configuration on your own \n    - Start from  Installations Page  Based on the option you select the level of assistance you receive from Airavata group will differ.  SciGaP or Airavata team will always act as the consultants to science communities and users who are looking out for middleware and gateways.", 
            "title": "How do you want to use Airavata?"
        }, 
        {
            "location": "/Airavata-Installation/", 
            "text": "Install Airavata\n\n\nNOTE: Below instructions are for users who host Airavata by themselves.\n\nFor communities who require SciGaP to host the gateway can contact through \nSciGaP - Contact Us\n\n\n\n\nClick your option;\n\n\nAiravata Prerequisites\n \n \n \n\n\nAiravata on CentOS 7\n \n\n\nGeneral Airavata Prerequisites\n\n\n\n\nJAVA 8 or above is required\n\n\nJava installation on CentOS, Mac, Windows, etc.. - \nOracle JAVA Installation\n\n\n\n\n\n\nRabbitMQ\n\n\nDownload the RabbitMQ Binary\nSelect the download file as per the operating system of your machine/server.\n\n\nSame link has installing guide documentation as well. E.g.:\nMAC Installation Guide\n\n\nFor  detailed information on getting RabbitMQ started, stopped, etc please visit \nRabbitMQ Documentation\n\n\n\n\n\n\nMaven\n\n\nDownload Maven\n (java based code building tool).\n\n\n\n\n\n\nMySQL Database\n\n\n\n\nAiravata Installation on CentOS 7\n\n\nNOTE: Airavata installation on other operating systems are similar with minor changes.\n\n\nPrerequisites\n\n\n\n\nCentOS 7 Default open JDK 1.8.0. (minimum) is sufficient.\n\n\nDownload RabbitMQ binary for CentOS 7\n\nDownload RabbitMQ Binary for CentOS\n\n\nPrerequisite for RabbitmQ Erlang can be installed using yum\n\nyum install Erlang\n\n\nUnzip the downloaded RabbitMQ tar file into a folder in your local machine.\n\ntar -xvf rabbitmq-server-mac-standalone-3.4.1.tar.gz\n\n\nStart the RabbitMQ server in the bin folder using;\n \n./sbin/rabbitmq-server start\n\n\nInstall Maven using yum install. ((install the latest maven 3.3.9. Default Maven default of centOS 7).\n\nyum install maven\n\n\nInstall MySQL database\n\nyum install mariadb-server\n\n\nStart maria DB with;\n\nsystemstl start mariadb\n\n\nWhile maria DB is running run\n\nmysql _secure_installation\n\nWhen executing above it will ask you for root password; provide it.\n\n\nCreate databases required for Airavata\n\ncreate database airavata_appcatalog;\n\n\ncreate database airavata_expcatalog;\n\n\ncreate database airavata_datacatalog;\n\n\ncreate database airavata_credentialstore;\n\n\ncreate database airavata_wfcatalog;\n\n\nGrant permission to these databases for Airavata\n\nCommand syntax: \ngrant all privileges on 'DB-Name'.\n to 'username'@'%' identified by 'password\u2019;\n\nE.g.: \ngrant all privileges on airavata_appcatalog.\n to 'airavatadb'@'%' identified by 'airavatadb\u2019;\n\nNOTE: Grant permission to every databased created above. % can be replaced by  'localhost' (if DB is also in the same server as airavata). If DB is in a different server give the server name.\n\n\n\n\n\nInstall Airavata\n\n\n\n\nCreate a folder in your local machine (E.g.: mkdir LocalAiravata).\n\n\nClone the master source (If you have not taken a clone prior) code from github to the created folder.\n\n\ngit clone https://github.com/apache/airavata.git\n\n\nAfter cloning is completed, build the source code by executing following maven command (In LocalAiravata directory you made);\n\nmvn clean install\n\nHint: To avoid tests (recommended for first time users) use\n\nmvn clean install -Dmaven.test.skip=true\n\n\nLocate the tar file in target directory\nPath:\n\ncd airavata/distribution/target/\n\n\nNavigate to locally created directory (LocalAiravata) copy the tar file\n\ncp airavata/distribution/target/apache-airavata-server-0.16-SNAPSHOT-bin.tar.gz ./\n\nOR\n\ncp airavata/distribution/target/apache-airavata-server-0.16-SNAPSHOT-bin.tar.zip ./\n\n\nNow unzip either the tar or zip file of Airavata server distribution;\n\nunzip apache-airavata-server-0.16-SNAPSHOT-bin.zip\n\nOR\n\ntar xvzf apache-airavata-server-0.16-SNAPSHOT-bin.tar.gz\n\n\nGenerate Credential store keystore file in the created local directory.\n\n keytool -genseckey -alias airavata -keyalg AES -keysize 128 -storetype jceks -keystore airavata_sym.jks\n\nFor more information visit \nCredential Store Configuration Documentation\n\n\nGo and put mysql.jar in to lib of Airavata. navigate to lib;\n   \ncd /LocalFolderPath/apache-airavata-server-0.16-SNAPSHOT/lib\n\n\nNavigate to bin folder which contains file airavata-server.properties and open it;\n\nvi apache-airavata-server-0.16-SNAPSHOT/bin\n\n\nUpdate relevant necessary properties to run Airavata locally.\n\nChange as required;\ntest\n\n\nAPI Server Registry Configuration\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\nregistry.jdbc.url=jdbc:mysql://localhost:3306/airavata_expcatalog (replace 'localhost' with correct server name if the DB is in a different server)\n\n\nregistry.jdbc.user=airavata\n\n\nregistry.jdbc.password=airavata\n\n\ndefault.registry.gateway=php_reference_gateway (give the gateway name you prefer. Default exists in the file)\n\n\n\n\n\n\n\n\n\n\nApplication Catalog DB Configuration\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\nappcatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_appcatalog\n\n\nappcatalog.jdbc.user=airavata\n\n\nappcatalog.jdbc.password=airavata\n\n\n\n\n\n\n\n\n\n\nData Catalog DB Configuration\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\ndatacatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_datacatalog\n\n\ndatacatalog.jdbc.user=airavata\n\n\ndatacatalog.jdbc.password=airavata\n\n\n\n\n\n\n\n\n\n\nWorkflow Catalog DB Configuration\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\nworkflowcatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_wfcatalog\n\n\nworkflowcatalog.jdbc.user=airavatadb\n\n\nworkflowcatalog.jdbc.password=airavatadb\n\n\n\n\n\n\n\n\n\n\nServer module Configuration\n\n\nMake sure all servers required to start are added as given\n\n\nservers=apiserver,orchestrator,gfac,credentialstore\n\n\n\n\n\n\n\n\n\n\nAPI Server SSL Configurations\n\n\nGive the correct path for key generation file. This is in the bin directtory and it is shipped defualt with Airavata.\n\n\napiserver.keystore=/home/airavata/LocalAiravata/apache-airavata-server-0.16-SNAPSHOT/bin/airavata.jks\n\n\n\n\n\n\n\n\n\n\nCredential Store module Configuration\n\n\nMake sure its'true' in\n\n\nstart.credential.store=true\n\n\n\n\n\n\nAdd the path to SSH key generation file\n\n\nE.g.: credential.store.keystore.url=/home/airavata/LocalAiravata/airavata-sym.jks\n\n\n\n\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\ncredential.store.jdbc.url=jdbc:mysql://localhost:3306/airavata_credentialstore\n\n\ncredential.store.jdbc.user=airavatadb\n\n\ncredential.store.jdbc.password=airavatadb\n\n\n\n\n\n\ncredential.store.keystore.url=/home/airavata/production-deployment/airavata_sym.jks\n\n\n\n\n\n\nAPI Security Configuration\n\n\nMake sure\n\n\napi.secured=false\n\n\nTLS.enabled=false\n\n\n\n\n\n\n\n\n\n\nMonitoring Module Configuration\n\n\nAdd your email address, username and password for email monitoring. This is the email account the job status change emails will be received from compute resources.\n         email.based.monitor.host=imap.gmail.com\n         email.based.monitor.address=jobs@sample.org\n         email.based.monitor.password=SamplePassword\n\n\n\n\n\n\nZookeeper Server Configuration\n\n\nFor 'Production' scenario make;\n\n\nembedded.zk=false\n\n\n\n\n\n\n\n\n\n\nAMQP Notification Configuration\n\n\nUsers can use RabbitMQ as 'Guest' users. This is the easy method. For this uncomment\n\n\nrabbitmq.broker.url=amqp://localhost:5672\n\n\n\n\n\n\nTo use as a 'Production' user\n\n\nNavigate to RabbitMQ bin folder.\n\n\nMake sure the RabbitMQ server is running. For production use \nrabbitmq-server -detached\n to start.\n\n\nCreate a virtual-host and user with a password. Follow documentation in \nRabbitMQ Users \n VirtualHost\n\n\nTo create a user; \nrabbitmqctl add_user Username Password\n\n\nTo create a vitrual-host \nrabbitmqctl add_vhost vhostauthvhost\n\n\nProvide permission to created 'Username'  to the created vhost \nrabbitmqctl set_permissions -p messaging airavata \".\n\" \".\n\" \".*\u201d\n\n\nUncomment rabbitmq.broker.url=amqp://Username:Password@localhost:5672/Vhost. Add the created username, password and Vhost in the URL.\n\n\nIf you need to stop RabbitMQ use \nrabbitmqctl stop\n.\n  \n If the RabbitMQ server stopped then the above user creation, vhost cretion and permission granting commmands need to run again after restarting the servers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDownload and install Zookeeper. Use \nDownload Zookeeper\n \n You can downlaod and install Zookeeper in the above created local folder; LocalAiravata\n\n\nNavigate to the Zookeeper bin directory  and start zookeeper \nzkServer.sh start\n\n\nIn bin start the Airavata server and monitor log messages; This may require JAVA_HOME to be defined. Some configurations such as in  bin/zoo.cfg and bin/airavata-server.properties  may have to be adjusted if some ports are already in use. Ports need to be open as well.\n\nsh airavata-server.sh start\n (This will run the airavata server in the background in demon mode)\n\n\nIf you are in the target folder use given to start Airavata server;\n\n\nsh apache-airavata-server-0.16-SNAPSHOT/bin/airavata-server.sh start\n\n\nTo monitor the server starting up, view the airavata server log;\n\n\ntail -f airavata-server.out\n \n\n\nFor subsequent Airavata copies; in the local Airavata folder where source code is cloned do a git clone https://github.com/apache/airavata.git for the latest trunk.", 
            "title": "Airavata"
        }, 
        {
            "location": "/Airavata-Installation/#install-airavata", 
            "text": "NOTE: Below instructions are for users who host Airavata by themselves. For communities who require SciGaP to host the gateway can contact through  SciGaP - Contact Us   Click your option;  Airavata Prerequisites        Airavata on CentOS 7    General Airavata Prerequisites   JAVA 8 or above is required  Java installation on CentOS, Mac, Windows, etc.. -  Oracle JAVA Installation    RabbitMQ  Download the RabbitMQ Binary Select the download file as per the operating system of your machine/server.  Same link has installing guide documentation as well. E.g.: MAC Installation Guide  For  detailed information on getting RabbitMQ started, stopped, etc please visit  RabbitMQ Documentation    Maven  Download Maven  (java based code building tool).    MySQL Database   Airavata Installation on CentOS 7  NOTE: Airavata installation on other operating systems are similar with minor changes.  Prerequisites   CentOS 7 Default open JDK 1.8.0. (minimum) is sufficient.  Download RabbitMQ binary for CentOS 7 Download RabbitMQ Binary for CentOS  Prerequisite for RabbitmQ Erlang can be installed using yum yum install Erlang  Unzip the downloaded RabbitMQ tar file into a folder in your local machine. tar -xvf rabbitmq-server-mac-standalone-3.4.1.tar.gz  Start the RabbitMQ server in the bin folder using;\n  ./sbin/rabbitmq-server start  Install Maven using yum install. ((install the latest maven 3.3.9. Default Maven default of centOS 7). yum install maven  Install MySQL database yum install mariadb-server  Start maria DB with; systemstl start mariadb  While maria DB is running run mysql _secure_installation \nWhen executing above it will ask you for root password; provide it.  Create databases required for Airavata create database airavata_appcatalog;  create database airavata_expcatalog;  create database airavata_datacatalog;  create database airavata_credentialstore;  create database airavata_wfcatalog;  Grant permission to these databases for Airavata \nCommand syntax:  grant all privileges on 'DB-Name'.  to 'username'@'%' identified by 'password\u2019; \nE.g.:  grant all privileges on airavata_appcatalog.  to 'airavatadb'@'%' identified by 'airavatadb\u2019; \nNOTE: Grant permission to every databased created above. % can be replaced by  'localhost' (if DB is also in the same server as airavata). If DB is in a different server give the server name.   Install Airavata   Create a folder in your local machine (E.g.: mkdir LocalAiravata).  Clone the master source (If you have not taken a clone prior) code from github to the created folder.  git clone https://github.com/apache/airavata.git  After cloning is completed, build the source code by executing following maven command (In LocalAiravata directory you made); mvn clean install \nHint: To avoid tests (recommended for first time users) use mvn clean install -Dmaven.test.skip=true  Locate the tar file in target directory\nPath: cd airavata/distribution/target/  Navigate to locally created directory (LocalAiravata) copy the tar file cp airavata/distribution/target/apache-airavata-server-0.16-SNAPSHOT-bin.tar.gz ./ \nOR cp airavata/distribution/target/apache-airavata-server-0.16-SNAPSHOT-bin.tar.zip ./  Now unzip either the tar or zip file of Airavata server distribution; unzip apache-airavata-server-0.16-SNAPSHOT-bin.zip \nOR tar xvzf apache-airavata-server-0.16-SNAPSHOT-bin.tar.gz  Generate Credential store keystore file in the created local directory.  keytool -genseckey -alias airavata -keyalg AES -keysize 128 -storetype jceks -keystore airavata_sym.jks \nFor more information visit  Credential Store Configuration Documentation  Go and put mysql.jar in to lib of Airavata. navigate to lib;\n    cd /LocalFolderPath/apache-airavata-server-0.16-SNAPSHOT/lib  Navigate to bin folder which contains file airavata-server.properties and open it; vi apache-airavata-server-0.16-SNAPSHOT/bin  Update relevant necessary properties to run Airavata locally. \nChange as required; test  API Server Registry Configuration  Comment out the derby DB properties  Change MySQL configurations  registry.jdbc.url=jdbc:mysql://localhost:3306/airavata_expcatalog (replace 'localhost' with correct server name if the DB is in a different server)  registry.jdbc.user=airavata  registry.jdbc.password=airavata  default.registry.gateway=php_reference_gateway (give the gateway name you prefer. Default exists in the file)      Application Catalog DB Configuration  Comment out the derby DB properties  Change MySQL configurations  appcatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_appcatalog  appcatalog.jdbc.user=airavata  appcatalog.jdbc.password=airavata      Data Catalog DB Configuration  Comment out the derby DB properties  Change MySQL configurations  datacatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_datacatalog  datacatalog.jdbc.user=airavata  datacatalog.jdbc.password=airavata      Workflow Catalog DB Configuration  Comment out the derby DB properties  Change MySQL configurations  workflowcatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_wfcatalog  workflowcatalog.jdbc.user=airavatadb  workflowcatalog.jdbc.password=airavatadb      Server module Configuration  Make sure all servers required to start are added as given  servers=apiserver,orchestrator,gfac,credentialstore      API Server SSL Configurations  Give the correct path for key generation file. This is in the bin directtory and it is shipped defualt with Airavata.  apiserver.keystore=/home/airavata/LocalAiravata/apache-airavata-server-0.16-SNAPSHOT/bin/airavata.jks      Credential Store module Configuration  Make sure its'true' in  start.credential.store=true    Add the path to SSH key generation file  E.g.: credential.store.keystore.url=/home/airavata/LocalAiravata/airavata-sym.jks    Comment out the derby DB properties  Change MySQL configurations  credential.store.jdbc.url=jdbc:mysql://localhost:3306/airavata_credentialstore  credential.store.jdbc.user=airavatadb  credential.store.jdbc.password=airavatadb    credential.store.keystore.url=/home/airavata/production-deployment/airavata_sym.jks    API Security Configuration  Make sure  api.secured=false  TLS.enabled=false      Monitoring Module Configuration  Add your email address, username and password for email monitoring. This is the email account the job status change emails will be received from compute resources.\n         email.based.monitor.host=imap.gmail.com\n         email.based.monitor.address=jobs@sample.org\n         email.based.monitor.password=SamplePassword    Zookeeper Server Configuration  For 'Production' scenario make;  embedded.zk=false      AMQP Notification Configuration  Users can use RabbitMQ as 'Guest' users. This is the easy method. For this uncomment  rabbitmq.broker.url=amqp://localhost:5672    To use as a 'Production' user  Navigate to RabbitMQ bin folder.  Make sure the RabbitMQ server is running. For production use  rabbitmq-server -detached  to start.  Create a virtual-host and user with a password. Follow documentation in  RabbitMQ Users   VirtualHost  To create a user;  rabbitmqctl add_user Username Password  To create a vitrual-host  rabbitmqctl add_vhost vhostauthvhost  Provide permission to created 'Username'  to the created vhost  rabbitmqctl set_permissions -p messaging airavata \". \" \". \" \".*\u201d  Uncomment rabbitmq.broker.url=amqp://Username:Password@localhost:5672/Vhost. Add the created username, password and Vhost in the URL.  If you need to stop RabbitMQ use  rabbitmqctl stop .\n    If the RabbitMQ server stopped then the above user creation, vhost cretion and permission granting commmands need to run again after restarting the servers.        Download and install Zookeeper. Use  Download Zookeeper    You can downlaod and install Zookeeper in the above created local folder; LocalAiravata  Navigate to the Zookeeper bin directory  and start zookeeper  zkServer.sh start  In bin start the Airavata server and monitor log messages; This may require JAVA_HOME to be defined. Some configurations such as in  bin/zoo.cfg and bin/airavata-server.properties  may have to be adjusted if some ports are already in use. Ports need to be open as well. sh airavata-server.sh start  (This will run the airavata server in the background in demon mode)  If you are in the target folder use given to start Airavata server;  sh apache-airavata-server-0.16-SNAPSHOT/bin/airavata-server.sh start  To monitor the server starting up, view the airavata server log;  tail -f airavata-server.out    For subsequent Airavata copies; in the local Airavata folder where source code is cloned do a git clone https://github.com/apache/airavata.git for the latest trunk.", 
            "title": "Install Airavata"
        }, 
        {
            "location": "/PGA-Installation/", 
            "text": "PGA Installation\n\n\nPGA on MAC OS\n  \n \n \n\n\nPGA on Cent OS\n\n\nGeneral PGA Prerequisites\n\n\n\n\nA Unix or Unix like operating system\n\n\nA web server (e.g apache web server) with PHP 5.4 or higher. Make sure have enabled mod_rewrite module in httpd.conf file and enable PHP SOAP extension\n\n\nComposer\n\n\nMYSQL database (Required if the user is hosting Airavata on his own. To communicate with hosted Airavata this step is not relevant)\n\n\nMCrypt PHP extension\n\n\nEnable OpenSSL PHP extension\n\n\nFollow instructions given in links to install the prerequisites based on the OS ;\n\n\nOn Ubunutu: http://www.dev-metal.com/install-laravel-4-ubuntu-12-04-lts/\n\n\nOn Centos: https://www.digitalocean.com/community/tutorials/how-to-install-laravel-4-on-a-centos-6-vps\n\n\nOn MAC OS: http://sangatpedas.com/20140219/installing-laravel-osx-mavericks/\n\n\n\n\n\n\nImportant: Do not need to install Laravel. You can skip the steps given on the links\n\n\nWSO2 IS server\n\n\n\n\nPGA  Installation on CentOS 7\n\n\nPre-Installations\n\n\n\n\nInstall apache\u00a0\n\nYum install httpd\n\n\nmodule_rewrite is auto enabled in apache version in centos7. Its in\u00a0/etc/httpd/conf.modules.d/00-base.conf file and the line is\u00a0LoadModule rewrite_module modules/mod_rewrite.so\n\n\nEnable php using \nyum install php-soap\n Could be be it is already enabled in CentOS7\n\n\nInstall php using \u00a0\nyum install php\n\n\ninstall composer\n\nyum install composer\n\n\nInstall php-mcrypt \nyum install php-mcrypt\n\n\n\n\nDownload and Configure PGA\n\n\n\n\nTake the git clone\u00a0https://github.com/apache/airavata-php-gateway.git\n\n Needs to take the clone in the document root. in centOS7 its var/www/html\n\n\nChange the cloned folder name to your desired folder name(e.g.: php-gateway). This will carry sub folders for the gateway\n\ncp - R airavata-php-gateway /* .\n\n\nIn the gateway folder do a \n\n\nGive permission to user data folder\n\nchmod -R 777 /var/www/portals/gateway-user-data/php-gateway\n\n\nCopy pga_config.template and make \u00a0pga_config.php\n\n\n\n\nIn pga_config.php change airavata server, change;\n\n\n\n\nAiravata Client Configurations\n\n\n'airavata-server' =\n 'localhost\u2019,\n\n\n'gateway-id' =\n 'airavata_test_gateway',\n\n\n'experiment-data-absolute-path' =\n '/var/www/experimentData',(Here user has to create the experimentData folder in var/www)\n\n\n'gateway-data-store-resource-id' =\n ''\n\n\n\n\n\n\nPortal Related Configurations\n\n\n'super-admin-portal' =\n false, (User has one gateway and need to use it to configure the compute resources, storage resources, etc...)\n\n\n'admin-emails' =\n ['airavatatest100@gmail.com'],\n\n\n'portal-email-username' =\n 'airavatatest100@gmail.com',\n\n\n'portal-email-password' =\n '\nairavaxxxxxx',\n\n\n\n\n\n\nWSO2 Identity Server Related Configurations\n\n\nAdd WSO2 IS related details URL, username, password, etc\u2026\n\n\n\n\n\n\n\n\n\n\n\n\nGive writing permission chmod -R g+rwx app/storage/\n\nin the http config file add URL information for the gateway file path (this is in w54 pga server) vi /etc/httpd/conf/httpd.conf\n\n\n\n\n\n\nMake sure SElinux comparability of airaveata_php_gateway folder. for that give\u00a0chcon -Rv --type=httpd_sys_content_t airavata-php-gateway/ - this is to make sure this folder is readable by http\n\n\n\n\n\n\nls - lZ shows the SELinux context. after the above chcon command do the same for storage folder as well\u00a0su -c \"chcon -R -h -t httpd_sys_script_rw_t [fullpath]/app/storage\u201d - this is to make sure the folder is writable\n\n\n\n\n\n\nonce the URL info added restart the http service\u00a0\n\nsystemctl restart \u00a0httpd.service\n\n\n\n\n\n\nConfigure firewall to allow http and https\n\nfirewall-cmd --zone=public --list-services\n - check existing configurations\n\nfirewall-cmd --zone=public --permanent --add-service=http\n - allow for http\n\nfirewall-cmd --zone=public --permanent --add-service=https\n - allow for https\n\n\n\n\n\n\nfirewall-cmd \u2014reload - refresh\n\n\n\n\n\nto get rules applied.\u00a0\n\n\n\n\nPGA  Installation on MAC Yosemite OS\n\n\nPre-Installations\n\n\n\n\nTo install MCrypt for PHP on MAC please follow the steps in http://coolestguidesontheplanet.com/install-mcrypt-php-mac-osx-10-10-yosemite-development-server/.\n\n\nFirst check wether your MAC has Apache installed. To check availability;\n\napache ctrl start\n\n\nTo stop running Apache use;\n\napache ctl stop\n\n\nOnce above is completed follow the steps given in https://web.archive.org/web/20150507101703/http://sangatpedas.com/20140219/installing-laravel-osx-mavericks for\n\n\nConfiguring Apache\n\n\nInstalling Composer (Use sudo commands as and when required for installation)\n\n\n\n\n\n\nTo install Composer use \n\ncurl -sS https://getcomposer.org/installer | php\n\n\nThen move Composer using \n\nmv composer.phar /usr/local/bin/composer\n\n\n\n\nDownload and Configure PGA\n\n\n\n\nGo to cd /Library/WebServer/Documents\n\n\nTake a copy from GIT using \n\ngit clone https://github.com/apache/airavata-php-gateway.git\n\n\nNavigate to PGA folder\n\ncd /Library/WebServer/Documents/airavata-php-gateway\n\n\nMake sure the storage folder is writable by all users\n\nsudo chmod -R 777 app/storage\n\n\nMove out of app folder and give;\n\nsudo composer update\n\nThis will take few minutes\n\n\nYou might get an error like this\n\n\n\n\n\n\nMcrypt PHP extension required.\nScript php artisan clear-compiled handling the post-update-cmd event returned with an error\n\n\n[RuntimeException]\n  Error Output:\n\n\n\n\n\n\ninstall mcrypt installation \nhttp://coolestguidesontheplanet.com/install-mcrypt-php-mac-osx-10-10-yosemite-development-server/\n\n\n(Optional) Go to [PGA_HOME]/app/config/pga_config.php and change the configuration to match your settings\n\n\nEnable Apache extensions (mod_rewrite module and PHP SOAP extension)\n\nsudo vim /etc/apache2/httpd.conf\n\n    uncomment #LoadModule rewrite_module libexec/apache2/mod_rewrite.so\n    uncomment #LoadModule php5_module libexec/apache2/libphp5.so\n\n\nNow issue composer update command\n\nsudo composer update\n\n\nRestart the web server\n\nsudo apachectl restart\n\n\n\n\nLink Airavata and PGA\n\n\n\n\nOnce the PGA and Airavata are downloaded and locally running; in PGA app/config folder locate the file called pga_config.php.template\n\n\nCopy the located file and name it as pga_config.php \n\n\nIn the newly copied file find two configurations for \n\n\nAiravata host\n\n\nPort\n\n\n\n\n\n\nChange above configurations\n\n\nAiravata host = localhost\n\n\nPort = 9930\n\n\n\n\n\n\nYou are all set to run your own PGA!\n\n\nFor steps to register resources, applications, etc\u2026 use \n\n\nFor steps to create projects, experiments and monitor them use \n\nIMPORTANT: In places where the hosted PGA link is used please replace by your locally running PGA URL.\n\n\n\n\nPGA  Installation on Ubuntu OS\n\n\n//http://tecadmin.net/install-java-8-on-centos-rhel-and-fedora/\n\n\nPre-Installations\n\n\n\n\nTo install dependencies use commands in https://vpsineu.com/blog/how-to-install-laravel-on-a-centos-7-vps/\nIn the command avoid installing mysql and mariaDB\n\n\nEnable the appropriate extensions: navigate to php.ini\n    \nsudo vi /etc/php.ini\n\n\nUncomment the following extensions: mcrypt.so, openssl.so, and soap.so. If they do not exists add them as extensions.\n\nextension=mcrypt.so\n\n\nextension=openssl.so\n\n\nextension=soap.so\n\n\nLocate httpd.conf file \n\nsudo vi /etc/httpd/conf/httpd.conf\n\n\nFind 'AllowOverride None' and change to 'AllowOverride All' (Two places to change)\n\n\n\n\n\n\n\n\nDownload and Configure PGA\n\n\n\n\nThe following guide give a sample installation starting from a fresh Ubunutu 12.04 installation. Similar instructions should be used in other operating systems.\n\n\nUpdate the ubuntu package manager\n\nsudo apt-get update\n\n\nsudo apt-get upgrade \n\n\nInstall Apache\n\nsudo apt-get install apache2\n\n\nInstall PHP 5.4\n\nsudo apt-get install python-software-properties\n\n\nsudo add-apt-repository ppa:ondrej/php5-oldstable\n\n\nsudo apt-get update\n\n\nsudo apt-cache policy php5\n\n\nsudo apt-get install php5\n\n\nYou can check the installed versions of apache and php using \napache2 -v\n and \nphp -v commands\n\n\nInstall the necessary php extensions\n\nsudo apt-get install unzip\n\n\nsudo apt-get install curl\n\n\nsudo apt-get install openssl\n\n\nsudo apt-get install php5-mcrypt\n\n\nsudo apt-get install php-soap\n\n\nInstall Composer System Wide\n\ncurl -sS https://getcomposer.org/installer | php\n\n\nsudo mv composer.phar /usr/local/bin/composer\n\n\nActivate mod_rewrite\n\nsudo a2enmod rewrite\n\n\nsudo service apache2 restart\n\n\nOpen the default vhost config file:\n \nsudo nano /etc/apache2/sites-available/default. \n\n\nNow search for \u201cAllowOverride None\u201d  corresponding \u201cDocumentRoot /var/www \n\u201d\n\n(which should be there TWO times) and change both to \u201cAllowOverride All\u201c. Search for these two lines.\n\n\nExit and save with CTRL+X, Y, ENTER.\n\n\n\n\nDownload PGA from GIT\nDownload PGA from github to the document root of you web server /var/www. \nUse git clone https://github.com/apache/airavata-php-gateway.git or download the zip from the github web page.\nGo inside the PGA directory (e.g /var/www/airavata-php-gateway)\nMake sure the storage folder is writable\nsudo chmod -R 755 app/storage\nGo to [PGA_HOME]/app/config/pga_config.php and change the configuration to match your settings\n\n\nNow issue composer install command\nsudo composer install\nRestart the web server\nsudo service apache2 restart", 
            "title": "PGA"
        }, 
        {
            "location": "/PGA-Installation/#pga-installation", 
            "text": "PGA on MAC OS         PGA on Cent OS", 
            "title": "PGA Installation"
        }, 
        {
            "location": "/airavata-properties/", 
            "text": "Airavata Server Properties\n\n\n\n\nAPI Server Registry Configuration\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\nregistry.jdbc.url=jdbc:mysql://localhost:3306/airavata_expcatalog (replace 'localhost' with correct server name if the DB is in a different server)\n\n\nregistry.jdbc.user=airavata\n\n\nregistry.jdbc.password=airavata\n\n\ndefault.registry.gateway=php_reference_gateway (give the gateway name you prefer. Default exists in the file)\n\n\n\n\n\n\n\n\n\n\nApplication Catalog DB Configuration\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\nappcatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_appcatalog\n\n\nappcatalog.jdbc.user=airavata\n\n\nappcatalog.jdbc.password=airavata\n\n\n\n\n\n\n\n\n\n\nData Catalog DB Configuration\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\ndatacatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_datacatalog\n\n\ndatacatalog.jdbc.user=airavata\n\n\ndatacatalog.jdbc.password=airavata\n\n\n\n\n\n\n\n\n\n\nWorkflow Catalog DB Configuration\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\nworkflowcatalog.jdbc.url=jdbc:mysql://localhost:3306/airavata_wfcatalog\n\n\nworkflowcatalog.jdbc.user=airavatadb\n\n\nworkflowcatalog.jdbc.password=airavatadb\n\n\n\n\n\n\n\n\n\n\nServer module Configuration\n\n\nMake sure all servers required to start are added as given\n\n\nservers=apiserver,orchestrator,gfac,credentialstore\n\n\n\n\n\n\n\n\n\n\nAPI Server SSL Configurations\n\n\nGive the correct path for key generation file. This is in the bin directtory and it is shipped defualt with Airavata.\n\n\napiserver.keystore=/home/airavata/LocalAiravata/apache-airavata-server-0.16-SNAPSHOT/bin/airavata.jks\n\n\n\n\n\n\n\n\n\n\nCredential Store module Configuration\n\n\nMake sure its 'true' in\n\n\nstart.credential.store=true\n\n\n\n\n\n\nAdd the path to SSH key generation file\n\n\nE.g.: credential.store.keystore.url=/home/airavata/LocalAiravata/airavata-sym.jks\n\n\n\n\n\n\nComment out the derby DB properties\n\n\nChange MySQL configurations\n\n\ncredential.store.jdbc.url=jdbc:mysql://localhost:3306/airavata_credentialstore\n\n\ncredential.store.jdbc.user=airavatadb\n\n\ncredential.store.jdbc.password=airavatadb\n\n\ncredential.store.keystore.url=/home/airavata/production-deployment/airavata_sym.jks\n\n\n\n\n\n\n\n\n\n\nAPI Security Configuration\n\n\nMake sure\n\n\napi.secured=false\n\n\nTLS.enabled=false\n\n\n\n\n\n\n\n\n\n\nMonitoring Module Configuration\n\n\nAdd your email address, username and password for email monitoring. This is the email account the job status change emails will be received from compute resources.\n             email.based.monitor.host=imap.gmail.com\n             email.based.monitor.address=jobs@sample.org\n             email.based.monitor.password=SamplePassword\n\n\n\n\n\n\nZookeeper Server Configuration\n\n\nFor 'Production' scenario make;\n\n\nembedded.zk=false\n\n\n\n\n\n\n\n\n\n\nAMQP Notification Configuration\n\n\nUsers can use RabbitMQ as 'Guest' users. This is the easy method. For this uncomment\n\n\nrabbitmq.broker.url=amqp://localhost:5672\n\n\n\n\n\n\nTo use as a 'Production' user\n\n\nNavigate to RabbitMQ bin folder.\n\n\nMake sure the RabbitMQ server is running. For production use \nrabbitmq-server -detached\n to start.\n\n\nCreate a virtual-host and user with a password. Follow documentation in \nRabbitMQ Users \n VirtualHost\n\n\nTo create a user; \nrabbitmqctl add_user Username Password\n\n\nTo create a vitrual-host \nrabbitmqctl add_vhost vhostauthvhost\n\n\nProvide permission to created 'Username'  to the created vhost \nrabbitmqctl set_permissions -p messaging airavata \".\n\" \".\n\" \".*\u201d\n\n\nUncomment rabbitmq.broker.url=amqp://Username:Password@localhost:5672/Vhost. Add the created username, password and Vhost in the URL.\n\n\nIf you need to stop RabbitMQ use \nrabbitmqctl stop\n\nIf the RabbitMQ server stopped then the above user creation, vhost cretion and permission granting commmands need to run again after restarting the servers.", 
            "title": "Airavata Property File"
        }, 
        {
            "location": "/airavata-properties/#airavata-server-properties", 
            "text": "", 
            "title": "Airavata Server Properties"
        }, 
        {
            "location": "/Gateway-Configurations/", 
            "text": "PGA Configurations\n\n\nYou Need to Have\n\n\n\n\nAiravata \n PGA installed and running\n\n\nTenant created in WSO2 IS hosted by you or SGG\n\n\nAdministrator privileges to the gateway with username and password\n\n\n\n\n\n\n\nAiravata Component Configuration\n\n\n\n\nFor this we use 'Admin Dashboard'\n\n\nGateway Admin need to configure;\n\n\nCompute Resources\n\n\nCompute Resources\n\n\nStorage Resources\n\n\nResource Preferences\n\n\nApplication Catalog\n\n\nApplication Module\n\n\nApplication Interface\n\n\nApplication Deployment\n\n\n\n\n\n\nCredential Store\n\n\nGenerate Credential Store Token + SSH Key.\n\n\nAdd these to authorized key files and into preferences.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCompute Resources\n\n\n\n\nNavigate to Admin Dashboard --\n Compute Resources --\n Register\n\n\nAdd Host Name, Description and create the resource.\n\n\nThen add data storage information in\n\n\nData Movement Interfaces\n\n\n\n\n\n\nAnd Save.\n\n\nSimilarly you can add multiple storage resources in to your gateway by selecting 'Register' from the left-hand-side menu.\n\n\nTo view the added resources navigate to Admin Dashboard --\n Storage Resources --\n Browse\n\n\nAll the resources will be listed. Gateway admin can view, edit, delete them.\nNOTE: Currently enabling and disabling storage resources is not an active feature.\n\n\n\n\n\n\n\nStorage Resources\n\n\n\n\nNavigate to Admin Dashboard --\n Storage Resources --\n Register\n\n\nAdd Storage Name, Description and create the resource.\n\n\nThen keep adding information on rest of the tabs appeared.\n\n\nQueues\n\n\nFile Systems (Not required at the moment)\n\n\nJob Submission Interfaces\n\n\nData Movement Interfaces\n\n\n\n\n\n\nAnd Save.\n\n\nSimilarly you can add multiple compute resources in to your gateway by selecting 'Register' from the left-hand-side menu.\n\n\nTo view the added compute resources navigate to Admin Dashboard --\n Compute Resource --\n Browse\n\n\nAll the resources will be listed. Gateway admin can view, edit, delete and enable and disable them.\n\n\n\n\n\n\n\nGatewayPreferences for Resources\n\n\n\n\nNavigate Admin Dashboard --\n Gateway Preferences\n\n\nBoth compute resource and storage resource specific preferences are defined here.\n\n\nTo add compute resource related preferences select the resource from the drop-down list and add/select preferred options and set preferences.\n\nRepeat this for every active enabled compute resource in the gateway.\n\n\nFor each gateway admin need to;\n\n\nwhether the preferences can be overridden by Airavata - Yes/No\n\n\nResource login name\n\n\nPreferred job submission and data movement protocols\n\n\nPreferred queue\n\n\nScratch location\n\n\nProject allocation number\n\n\nResource specific credential store token\n\n\n\n\n\n\n\n\n\n\n\nApplication Catalog\n\n\n\n\nGateway admin add applications in to the gateway. Adding an application is a 3 step process\n\n\nadmin need to add application module, interface and deployment information in order to launch jobs on compute resources\n\n\nWhat each step means?\n\n\nApplication module - Admin Dashboard --\n App Catalog --\n Module\nThis is the simple introduction of the application.\n\n\nApplication interface - Admin Dashboard --\n App Catalog --\n Interface\nApplication interface defines the required inputs, output produced and their characteristics.\n\n\nApplication deployment - Admin Dashboard --\n App Catalog --\n Deployment\nApplication deployment describes application deployment details in specific resource.\n\n\n\n\n\n\n\n\n\n\n\nCredential Store\n\n\nWSO2 IS Configuration\n\n\n\n\nSetting up WSO2 IS for the new gateway.\n\n\nOnce PGA is cloned all information related to user identity will be in app/config/pga_config.php. No modifications required for users who are using  hosted IS.\n\n\nFor user identity management we could either use Airavata WSO2 IS or users own WSO2 IS.\n\n\nDownload WSO2 Identity Server 5.0 from http://product-dist.wso2.com/products/identity-server/5.0.0/wso2is-5.0.0.zip\n\n\nExtract the downloaded IS binary archive to a location \n.\n\n\nSet JAVA_HOME variable and add jdk bin directory to the PATH variable.\n\n\nOpen \n/repository/conf/carbon.xml and change the following property to false\n\nfalse\n\n\nExecute the following command to run the server\nsh \n/bin/wso2server.sh\nYou should be able to login to the Identity Server Web App using your browser with url http://localhost:9443/carbon . Default admin credentials are username: admin, password: admin\n\n\nFor more information regarding WSO2 Identity Server refer this https://docs.wso2.org/display/IS460/Deploying+in+Production\nGateway admin will be provided with\n\n\nDomain URL for the Gateway\n\n\nAdmin User name", 
            "title": "PGA"
        }, 
        {
            "location": "/Gateway-Configurations/#pga-configurations", 
            "text": "You Need to Have   Airavata   PGA installed and running  Tenant created in WSO2 IS hosted by you or SGG  Administrator privileges to the gateway with username and password    Airavata Component Configuration   For this we use 'Admin Dashboard'  Gateway Admin need to configure;  Compute Resources  Compute Resources  Storage Resources  Resource Preferences  Application Catalog  Application Module  Application Interface  Application Deployment    Credential Store  Generate Credential Store Token + SSH Key.  Add these to authorized key files and into preferences.        Compute Resources   Navigate to Admin Dashboard --  Compute Resources --  Register  Add Host Name, Description and create the resource.  Then add data storage information in  Data Movement Interfaces    And Save.  Similarly you can add multiple storage resources in to your gateway by selecting 'Register' from the left-hand-side menu.  To view the added resources navigate to Admin Dashboard --  Storage Resources --  Browse  All the resources will be listed. Gateway admin can view, edit, delete them.\nNOTE: Currently enabling and disabling storage resources is not an active feature.    Storage Resources   Navigate to Admin Dashboard --  Storage Resources --  Register  Add Storage Name, Description and create the resource.  Then keep adding information on rest of the tabs appeared.  Queues  File Systems (Not required at the moment)  Job Submission Interfaces  Data Movement Interfaces    And Save.  Similarly you can add multiple compute resources in to your gateway by selecting 'Register' from the left-hand-side menu.  To view the added compute resources navigate to Admin Dashboard --  Compute Resource --  Browse  All the resources will be listed. Gateway admin can view, edit, delete and enable and disable them.    GatewayPreferences for Resources   Navigate Admin Dashboard --  Gateway Preferences  Both compute resource and storage resource specific preferences are defined here.  To add compute resource related preferences select the resource from the drop-down list and add/select preferred options and set preferences. Repeat this for every active enabled compute resource in the gateway.  For each gateway admin need to;  whether the preferences can be overridden by Airavata - Yes/No  Resource login name  Preferred job submission and data movement protocols  Preferred queue  Scratch location  Project allocation number  Resource specific credential store token      Application Catalog   Gateway admin add applications in to the gateway. Adding an application is a 3 step process  admin need to add application module, interface and deployment information in order to launch jobs on compute resources  What each step means?  Application module - Admin Dashboard --  App Catalog --  Module\nThis is the simple introduction of the application.  Application interface - Admin Dashboard --  App Catalog --  Interface\nApplication interface defines the required inputs, output produced and their characteristics.  Application deployment - Admin Dashboard --  App Catalog --  Deployment\nApplication deployment describes application deployment details in specific resource.      Credential Store  WSO2 IS Configuration   Setting up WSO2 IS for the new gateway.  Once PGA is cloned all information related to user identity will be in app/config/pga_config.php. No modifications required for users who are using  hosted IS.  For user identity management we could either use Airavata WSO2 IS or users own WSO2 IS.  Download WSO2 Identity Server 5.0 from http://product-dist.wso2.com/products/identity-server/5.0.0/wso2is-5.0.0.zip  Extract the downloaded IS binary archive to a location  .  Set JAVA_HOME variable and add jdk bin directory to the PATH variable.  Open  /repository/conf/carbon.xml and change the following property to false false  Execute the following command to run the server\nsh  /bin/wso2server.sh\nYou should be able to login to the Identity Server Web App using your browser with url http://localhost:9443/carbon . Default admin credentials are username: admin, password: admin  For more information regarding WSO2 Identity Server refer this https://docs.wso2.org/display/IS460/Deploying+in+Production\nGateway admin will be provided with  Domain URL for the Gateway  Admin User name", 
            "title": "PGA Configurations"
        }, 
        {
            "location": "/User-Profiles/", 
            "text": "Airavata User Profiles\n\n\nWhat Are Airavata User Profiles?\n\n\n\n\nWhen using Airavata as the middleware between your gateway and computational resources first lets identify and understand the user profiles available and their potential.\n\n\nKnowing the profiles and the features of each will assist on shaping your gateway user hierarchy.\n\n\nThere are 4 active user profiles in Airavata with different set of features at each level.\n\n\n'Image - Airavata User Profiles' depicts the features available for each profile.\n\n\n\n\nWhat each user Profile can do within PGA?\n\n\n\n\nSuper Admin\n\n\nSuper admins has access to all the gateways as well as to Airavata and PGA. Currently this role resides with limited members of SGG group at IU.\n\n\nCreate Gateway and set up identity server for user account management. \n\n\nRegister Computer resource available to submit jobs through Airavata.\n\n\nAdd email monitoring accounts detail to Airavata for each gateway.\n\n\nInvestigate issues with individual experiments from any of the gateways under SciGaP.\n\n\n\n\n\n\n\n\n\n\n\nGateway Admin \n\n\n\n\nSet up gateway preferences for Compute Resources and Storage Resources\n\n\nGenerate SSH keys and their tokens using Credential Store in Admin Dashboard.\n\n\nAdd the generated SSH token to Gateway Preferences.\n\n\nAdd the generated SSH keys to authorized_key files in each resource.\n\n\nCan Cancel, clone experiments of a gateway user through Admin dashboard behalf of the user.\n\n\nCreate Applications and their deployments in to the gateway.\n\nNOTE: If user hosts his own gateway; 'Gateway Admin' role will hold features of both Super Admin and Gateway Admin.\n\n\n\n\n\n\n\n\nGateway Admin-Read-Only\n\n\n\n\nCan view everything in Admin Dashboard but cannot Add, Edit or Delete any records from dashboard.\n\n\nCan monitor experiments through Experiments Statistics in Admin dashboard.\n\n\nBehalf of a gateway user can edit, cancel or clone an experiment.\n\n\n\n\n\n\n\n\n\nGateway User\n\n\nCreate, launch their own experiments in using available applications and compute resources.\n\n\nMonitor progress of experiment execution.\n\n\nGroup experiments by creating Projects.\n\n\nRequest new features, applications and report bug, issue using Service Desk\n\n\nPassword recovery.", 
            "title": "User Profiles"
        }, 
        {
            "location": "/User-Profiles/#airavata-user-profiles", 
            "text": "What Are Airavata User Profiles?   When using Airavata as the middleware between your gateway and computational resources first lets identify and understand the user profiles available and their potential.  Knowing the profiles and the features of each will assist on shaping your gateway user hierarchy.  There are 4 active user profiles in Airavata with different set of features at each level.  'Image - Airavata User Profiles' depicts the features available for each profile.   What each user Profile can do within PGA?   Super Admin  Super admins has access to all the gateways as well as to Airavata and PGA. Currently this role resides with limited members of SGG group at IU.  Create Gateway and set up identity server for user account management.   Register Computer resource available to submit jobs through Airavata.  Add email monitoring accounts detail to Airavata for each gateway.  Investigate issues with individual experiments from any of the gateways under SciGaP.      Gateway Admin    Set up gateway preferences for Compute Resources and Storage Resources  Generate SSH keys and their tokens using Credential Store in Admin Dashboard.  Add the generated SSH token to Gateway Preferences.  Add the generated SSH keys to authorized_key files in each resource.  Can Cancel, clone experiments of a gateway user through Admin dashboard behalf of the user.  Create Applications and their deployments in to the gateway. NOTE: If user hosts his own gateway; 'Gateway Admin' role will hold features of both Super Admin and Gateway Admin.     Gateway Admin-Read-Only   Can view everything in Admin Dashboard but cannot Add, Edit or Delete any records from dashboard.  Can monitor experiments through Experiments Statistics in Admin dashboard.  Behalf of a gateway user can edit, cancel or clone an experiment.     Gateway User  Create, launch their own experiments in using available applications and compute resources.  Monitor progress of experiment execution.  Group experiments by creating Projects.  Request new features, applications and report bug, issue using Service Desk  Password recovery.", 
            "title": "Airavata User Profiles"
        }, 
        {
            "location": "/Application-CookBook/", 
            "text": "Application Cookbook Recipes\n\n\nAiravata Applications and Available Resource List\n\n\n\n\n\n\n\n\nApplication\n\n\nResource List\n\n\n\n\n\n\n\n\n\n\nAbinit\n\n\nBigRed2\n\n\n\n\n\n\nAmber_Sander\n\n\nBigRed2, Stampede, Comet\n\n\n\n\n\n\nAutoDock\n\n\nBigRed2\n\n\n\n\n\n\nCP2K\n\n\nBigRed2\n\n\n\n\n\n\nEcho\n\n\nBigRed2, Stampede, Comet\n\n\n\n\n\n\nGamess\n\n\nBigRed2, Gordon\n\n\n\n\n\n\nGaussian\n\n\nBigRed2, Comet, Gordon\n\n\n\n\n\n\nGromacs\n\n\nBigRed2, Stampede\n\n\n\n\n\n\nLammps\n\n\nBigRed2, Stampede, Comet\n\n\n\n\n\n\nNEK5000\n\n\nBigRed2\n\n\n\n\n\n\nNWChem\n\n\nStampede, Comet\n\n\n\n\n\n\nPhasta_P\n\n\nStampede\n\n\n\n\n\n\nQuantum_Espresso\n\n\nStampede, Comet\n\n\n\n\n\n\nTinker_Monte\n\n\nStampede\n\n\n\n\n\n\nWRF\n\n\nStampede\n\n\n\n\n\n\n\n\nApplication Inputs\n\n\nInputs for all applications currently available in Airavata can be found in\nhttps://iu.box.com/s/9ztdby709kso8siachz16svn2y511nn7 \n\n\nSample Application Recipes\n\n\nAbinit\n\n\nModule\n\n\n\n\nName: Abinit\n\n\nDescription: A package whose main program allows one to find the total energy, charge density and electronic structure of systems made of electrons and nuclei (molecules and periodic solids) within Density Functional Theory (DFT) \n\n\n\n\nInterface\n\n\n\n\nInputs:       \n\n\nPspgth-Input-File\n\n\nTbase-Input-File-1\n\n\nTbase-Input-File-2\n\n\n\n\n\n\nOutputs:\n\n\nApplication-Out\n\n\nStandard-Error\n\n\nStandard-Out\n\n\n\n\n\n\n\n\nDeployment\n\n\n\n\n\n\n\n\nResource\n\n\nExecutable Path\n\n\nApplication Parallelism\n\n\nModule Load Commands\n\n\n\n\n\n\n\n\n\n\nbigred2.uits.iu.edu\n\n\n/N/soft/cle4/abinit/cpu/7.6.4/bin/abinit\n\n\nCRAY_MPI\n\n\nmodule swap PrgEnv-cray/5.2.40 PrgEnv-gnu/5.2.40; module load netcdf fftw abinit\n\n\n\n\n\n\n\n\nAmber_sander\n\n\n\n\nName: Amber_Sander\n\n\nDescription:  Assisted Model Building with Energy Refinement MD Package\n\n\nInputs:\n\n\nHeat-Restart-File\n\n\nParameter-Topology-File \n\n\nProduction-Control-File\n\n\n\n\n\n\nOutputs:\n\n\nAmber-Execution-log\n\n\nAmber-Execution-Summary \n\n\nAmber-Restart-File\n\n\nAmber-Trajectory-File\n\n\nStandard-Error\n\n\nStandard-Out\n\n\n\n\n\n\nDeployment\n\n\n\n\n\n\n\n\n\n\nResource\n\n\nExecutable Path\n\n\nApplication Parallelism\n\n\nModule Load Commands\n\n\n\n\n\n\n\n\n\n\nbigred2.uits.iu.edu\n\n\n/N/soft/cle4/amber/gnu/mpi/12/amber12/bin/sander.MPI -O\n\n\nMPI\n\n\nmodule load amber/gnu/mpi/12; module swap PrgEnv-cray PrgEnv-gnu\n\n\n\n\n\n\nstampede.tacc.xsede.org\n\n\n/opt/apps/intel13/mvapich2_1_9/amber/12.0/bin/sander.MPI -O\n\n\nMPI\n\n\nmodule load amber\n\n\n\n\n\n\ncomet.sdsc.edu\n\n\n/opt/amber/bin/sander.MPI\n\n\nMPI\n\n\nmodule load amber\n\n\n\n\n\n\n\n\nAutoDock\n\n\n\n\nName: AutoDock\n\n\nDescription:  AutoDock suite of automated docking tools\n\n\nInputs:\n\n\nHSG1-Maps-FLD\n\n\nInput-File-DAT \n\n\nInput-File-DPF\n\n\n\n\n\n\nOutputs:\n\n\nStandard-Error\n\n\nStandard-Out\n\n\n\n\n\n\nDeployment\n\n\n\n\n\n\n\n\n\n\nResource\n\n\nExecutable Path\n\n\nApplication Parallelism\n\n\nModule Load Commands\n\n\n\n\n\n\n\n\n\n\nbigred2.uits.iu.edu\n\n\n/N/soft/cle4/autodock/4.2/bin/autodock4\n\n\nMPI\n\n\nmodule load autodock/4.2\n\n\n\n\n\n\n\n\nCP2K\n\n\n\n\nName: CP2K\n\n\nDescription:  CP2K Test Application Module\n\n\nInputs:\n\n\nInput-File-INP\n\n\n\n\n\n\nOutputs:\n\n\nCP2K-Application-Output\n\n\nStandard-Error\n\n\nStandard-Out\n\n\n\n\n\n\nDeployment\n\n\n\n\n\n\n\n\n\n\nResource\n\n\nExecutable Path\n\n\nApplication Parallelism\n\n\nModule Load Commands\n\n\n\n\n\n\n\n\n\n\ncomet.sdsc.edu\n\n\n/opt/cp2k/bin/cp2k.popt\n\n\nMPI\n\n\nmodule load cp2k\n\n\n\n\n\n\n\n\nEcho\n\n\n\n\nName: CP2K\n\n\nDescription:  A Simple Echo Application\n\n\nInputs:\n\n\nInput-to-Echo\n\n\n\n\n\n\nOutputs:\n\n\nStandard-Error\n\n\nStandard-Out\n\n\n\n\n\n\nDeployment\n\n\n\n\n\n\n\n\n\n\nResource\n\n\nExecutable Path\n\n\nApplication Parallelism\n\n\nModule Load Commands\n\n\n\n\n\n\n\n\n\n\nbigred2.uits.iu.edu\n\n\n/N/u/seagrid/BigRed2/production/app_wrappers/echo_wrapper.sh\n\n\nSERIAL\n\n\n\n\n\n\n\n\nstampede.tacc.xsede.org\n\n\n/home1/02731/scigap/apps/echo_wrapper.sh\n\n\nSERIAL\n\n\n\n\n\n\n\n\ncomet.sdsc.edu\n\n\n/home/scigap/apps/echo_wrapper.sh\n\n\nSERIAL", 
            "title": "Applications"
        }, 
        {
            "location": "/Application-CookBook/#application-cookbook-recipes", 
            "text": "Airavata Applications and Available Resource List     Application  Resource List      Abinit  BigRed2    Amber_Sander  BigRed2, Stampede, Comet    AutoDock  BigRed2    CP2K  BigRed2    Echo  BigRed2, Stampede, Comet    Gamess  BigRed2, Gordon    Gaussian  BigRed2, Comet, Gordon    Gromacs  BigRed2, Stampede    Lammps  BigRed2, Stampede, Comet    NEK5000  BigRed2    NWChem  Stampede, Comet    Phasta_P  Stampede    Quantum_Espresso  Stampede, Comet    Tinker_Monte  Stampede    WRF  Stampede     Application Inputs  Inputs for all applications currently available in Airavata can be found in\nhttps://iu.box.com/s/9ztdby709kso8siachz16svn2y511nn7   Sample Application Recipes  Abinit  Module   Name: Abinit  Description: A package whose main program allows one to find the total energy, charge density and electronic structure of systems made of electrons and nuclei (molecules and periodic solids) within Density Functional Theory (DFT)    Interface   Inputs:         Pspgth-Input-File  Tbase-Input-File-1  Tbase-Input-File-2    Outputs:  Application-Out  Standard-Error  Standard-Out     Deployment     Resource  Executable Path  Application Parallelism  Module Load Commands      bigred2.uits.iu.edu  /N/soft/cle4/abinit/cpu/7.6.4/bin/abinit  CRAY_MPI  module swap PrgEnv-cray/5.2.40 PrgEnv-gnu/5.2.40; module load netcdf fftw abinit     Amber_sander   Name: Amber_Sander  Description:  Assisted Model Building with Energy Refinement MD Package  Inputs:  Heat-Restart-File  Parameter-Topology-File   Production-Control-File    Outputs:  Amber-Execution-log  Amber-Execution-Summary   Amber-Restart-File  Amber-Trajectory-File  Standard-Error  Standard-Out    Deployment      Resource  Executable Path  Application Parallelism  Module Load Commands      bigred2.uits.iu.edu  /N/soft/cle4/amber/gnu/mpi/12/amber12/bin/sander.MPI -O  MPI  module load amber/gnu/mpi/12; module swap PrgEnv-cray PrgEnv-gnu    stampede.tacc.xsede.org  /opt/apps/intel13/mvapich2_1_9/amber/12.0/bin/sander.MPI -O  MPI  module load amber    comet.sdsc.edu  /opt/amber/bin/sander.MPI  MPI  module load amber     AutoDock   Name: AutoDock  Description:  AutoDock suite of automated docking tools  Inputs:  HSG1-Maps-FLD  Input-File-DAT   Input-File-DPF    Outputs:  Standard-Error  Standard-Out    Deployment      Resource  Executable Path  Application Parallelism  Module Load Commands      bigred2.uits.iu.edu  /N/soft/cle4/autodock/4.2/bin/autodock4  MPI  module load autodock/4.2     CP2K   Name: CP2K  Description:  CP2K Test Application Module  Inputs:  Input-File-INP    Outputs:  CP2K-Application-Output  Standard-Error  Standard-Out    Deployment      Resource  Executable Path  Application Parallelism  Module Load Commands      comet.sdsc.edu  /opt/cp2k/bin/cp2k.popt  MPI  module load cp2k     Echo   Name: CP2K  Description:  A Simple Echo Application  Inputs:  Input-to-Echo    Outputs:  Standard-Error  Standard-Out    Deployment      Resource  Executable Path  Application Parallelism  Module Load Commands      bigred2.uits.iu.edu  /N/u/seagrid/BigRed2/production/app_wrappers/echo_wrapper.sh  SERIAL     stampede.tacc.xsede.org  /home1/02731/scigap/apps/echo_wrapper.sh  SERIAL     comet.sdsc.edu  /home/scigap/apps/echo_wrapper.sh  SERIAL", 
            "title": "Application Cookbook Recipes"
        }, 
        {
            "location": "/AiravataApi/", 
            "text": "Airavata API\n\n\nFor Airavata API documentation please visit \nAiravata 0.16 API Documentation\n\n\nIf any questions or clarification regarding the API documentation please contact us through;\n\nAiravata Mailing List\n \n OR\n\n\nHipChat", 
            "title": "Airavata API"
        }, 
        {
            "location": "/AiravataApi/#airavata-api", 
            "text": "For Airavata API documentation please visit  Airavata 0.16 API Documentation  If any questions or clarification regarding the API documentation please contact us through; Airavata Mailing List    OR  HipChat", 
            "title": "Airavata API"
        }, 
        {
            "location": "/FAQ/", 
            "text": "Troubleshooting FAQ\n\n\n Q1.\n I have setup my own gateway and Airavata. When I log into the gateway I cannot create Compute resources. What should I do?\n\n\nAnswer: \n In your pga_config.php (in folder .../testdrive/app/config) under heading 'Portal Related Configurations' set 'super-admin-portal' =\n false, to true.\n\n\nQ2.\n I don't get notifications when users create new accounts in my gateway. Why?\n\n\nAnswer: \n That's because you have not defined an email address in \n'admin-emails' =\n ['xxx@xxx.com','yyy@yyy.com']. Here you can add one or many.\n\n\n Q3.\n  I am not receiving email notifications from compute resoures for job status changes. What should I do?\n\n\nAnswer: \n In airavata-server.properties please locate and set your email account information.\n\nemail.based.monitor.host=imap.gmail.com\nemail.based.monitor.address=airavata-user@kuytje.nl\nemail.based.monitor.password=zzzz\nemail.based.monitor.folder.name=INBOX\nemail.based.monitor.store.protocol=imaps (either imaps or pop3)\n\n\n Q4.\n  In my Airavata log I have error messages like\n\nERROR org.apache.airavata.api.server.handler.AiravataServerHandler  - Error occurred while retrieving SSH public keys for gateway\n\nERROR org.apache.airavata.credential.store.server.CredentialStoreServerHandler  - Error occurred while retrieving credentials\n\nWhat should I do?\n\nAnswer: \n This could be due to missing tables in your credential store database. Check whether CREDENTIALS and COMMUNITY_USER tables exits. If not create then using\n\nCREATE TABLE COMMUNITY_USER\n(\n        GATEWAY_ID VARCHAR(256) NOT NULL,\n        COMMUNITY_USER_NAME VARCHAR(256) NOT NULL,\n        TOKEN_ID VARCHAR(256) NOT NULL,\n        COMMUNITY_USER_EMAIL VARCHAR(256) NOT NULL,\n        PRIMARY KEY (GATEWAY_ID, COMMUNITY_USER_NAME, TOKEN_ID)\n);\n\n\n\nCREATE TABLE CREDENTIALS\n(\n        GATEWAY_ID VARCHAR(256) NOT NULL,\n        TOKEN_ID VARCHAR(256) NOT NULL,\n        CREDENTIAL BLOB NOT NULL,\n        PORTAL_USER_ID VARCHAR(256) NOT NULL,\n        TIME_PERSISTED TIMESTAMP DEFAULT NOW() ON UPDATE NOW(),\n        PRIMARY KEY (GATEWAY_ID, TOKEN_ID)\n);\n\n\n\n Q5.\n  I cannot login to my Compute Resource and launch jobs from Airavata using the SSH key I generated. What should I do?\n\nAnswer: \n Steps to use generated SSH key\n\n        - Generate SSH key + token using Credential Store\n\n        - Add the generated token to your resource through PGA --\n Admin Dashboard --\n Gateway Preferences\n\n        - Add the generated SSH key\n\n\n Q6.\n When installing PGA in MAC i got below error after updating the composer.\n        \n- Error\n\n        Mcrypt PHP extension required.\n\n        Script php artisan clear-compiled handling the post-update-cmd event returned with an error\n\n            [RuntimeException]\n\n            Error Output:\n\nAnswer: \n\n        Install mcrypt installation;\n        \nmcrypt Installation Steps\n\n\n Q7.\n After following the required steps only the home page is working and some images are not shown properly.\n    \nAnswer: \nIf you are facing this behavior first check whether you have enabled mod_rewrite module in apache webserver.\n    \nAnd also check whether you have set AllowOverride All in the Vhost configuration file in apache web server. \n(e.g file location is /etc/apache2/sites-available/default and there should be two places where you want to change)\n\n\n     \n\n        ServerAdmin webmaster@dummy-host.example.com\n        DocumentRoot /var/www/html/portal/public\n        ServerName pga.example.com\n        \n\n           AllowOverride all\n        \n\n        ErrorLog logs/pga_error_log\n        CustomLog logs/pga--access_log common\n    \n\n    \n\n\n Q8.\n I get the Error message Permission Denied to app/storage directory.\n\n    \nAnswer: \nExecute the following command and grant all permissions; \n sudo chmod -R 777 app/storage\n\n\n Q9.\n In Ubuntu environment when executing sudo composer update it fails with message \"Mcrypt PHP extension required\".\n \nAnswer: \nTo fix this install PHP mcrypt extension by following the below steps;\n \nsudo apt-get install php5-mcrypt\n\n    use locate mcrypt.so ,to get its locaton\n    locate mcrypt.ini and open the mcrypt.ini file\n    sudo pico /etc/php5/mods-available/mcrypt.ini\n    change the at line a extension=\n eg:/usr/lib/php5/20121212/mcrypt.so\n    save changes.\n    execute the command:  sudo php5enmod mcrypt\n    Now restart the apache server again and test PGA web-interface.\n\n\n Q10.\n When tried to login or create a new user account an Error is thrown which is similar to PHP Fatal error:  SOAP-ERROR: Parsing WSDL: Couldn't load from...\n    \nAnswer: \n If you face this kind of an error first check whether you have enabled PHP SOAP and OpenSSL extensions. If even after enabling them the issue is still occurring try updating the PHP OpenSSL extension. (Using command like yum update openssl)", 
            "title": "FAQ"
        }, 
        {
            "location": "/FAQ/#troubleshooting-faq", 
            "text": "Q1.  I have setup my own gateway and Airavata. When I log into the gateway I cannot create Compute resources. What should I do?  Answer:   In your pga_config.php (in folder .../testdrive/app/config) under heading 'Portal Related Configurations' set 'super-admin-portal' =  false, to true.  Q2.  I don't get notifications when users create new accounts in my gateway. Why?  Answer:   That's because you have not defined an email address in  'admin-emails' =  ['xxx@xxx.com','yyy@yyy.com']. Here you can add one or many.   Q3.   I am not receiving email notifications from compute resoures for job status changes. What should I do?  Answer:   In airavata-server.properties please locate and set your email account information. email.based.monitor.host=imap.gmail.com\nemail.based.monitor.address=airavata-user@kuytje.nl\nemail.based.monitor.password=zzzz\nemail.based.monitor.folder.name=INBOX\nemail.based.monitor.store.protocol=imaps (either imaps or pop3)   Q4.   In my Airavata log I have error messages like ERROR org.apache.airavata.api.server.handler.AiravataServerHandler  - Error occurred while retrieving SSH public keys for gateway ERROR org.apache.airavata.credential.store.server.CredentialStoreServerHandler  - Error occurred while retrieving credentials What should I do? Answer:   This could be due to missing tables in your credential store database. Check whether CREDENTIALS and COMMUNITY_USER tables exits. If not create then using CREATE TABLE COMMUNITY_USER\n(\n        GATEWAY_ID VARCHAR(256) NOT NULL,\n        COMMUNITY_USER_NAME VARCHAR(256) NOT NULL,\n        TOKEN_ID VARCHAR(256) NOT NULL,\n        COMMUNITY_USER_EMAIL VARCHAR(256) NOT NULL,\n        PRIMARY KEY (GATEWAY_ID, COMMUNITY_USER_NAME, TOKEN_ID)\n);  CREATE TABLE CREDENTIALS\n(\n        GATEWAY_ID VARCHAR(256) NOT NULL,\n        TOKEN_ID VARCHAR(256) NOT NULL,\n        CREDENTIAL BLOB NOT NULL,\n        PORTAL_USER_ID VARCHAR(256) NOT NULL,\n        TIME_PERSISTED TIMESTAMP DEFAULT NOW() ON UPDATE NOW(),\n        PRIMARY KEY (GATEWAY_ID, TOKEN_ID)\n);   Q5.   I cannot login to my Compute Resource and launch jobs from Airavata using the SSH key I generated. What should I do? Answer:   Steps to use generated SSH key \n        - Generate SSH key + token using Credential Store \n        - Add the generated token to your resource through PGA --  Admin Dashboard --  Gateway Preferences \n        - Add the generated SSH key   Q6.  When installing PGA in MAC i got below error after updating the composer.\n         - Error \n        Mcrypt PHP extension required. \n        Script php artisan clear-compiled handling the post-update-cmd event returned with an error \n            [RuntimeException] \n            Error Output: Answer:  \n        Install mcrypt installation;\n         mcrypt Installation Steps   Q7.  After following the required steps only the home page is working and some images are not shown properly.\n     Answer:  If you are facing this behavior first check whether you have enabled mod_rewrite module in apache webserver.\n     And also check whether you have set AllowOverride All in the Vhost configuration file in apache web server.  (e.g file location is /etc/apache2/sites-available/default and there should be two places where you want to change) \n      \n        ServerAdmin webmaster@dummy-host.example.com\n        DocumentRoot /var/www/html/portal/public\n        ServerName pga.example.com\n         \n           AllowOverride all\n         \n        ErrorLog logs/pga_error_log\n        CustomLog logs/pga--access_log common\n     \n       Q8.  I get the Error message Permission Denied to app/storage directory. \n     Answer:  Execute the following command and grant all permissions;   sudo chmod -R 777 app/storage   Q9.  In Ubuntu environment when executing sudo composer update it fails with message \"Mcrypt PHP extension required\".\n  Answer:  To fix this install PHP mcrypt extension by following the below steps;\n  sudo apt-get install php5-mcrypt \n    use locate mcrypt.so ,to get its locaton\n    locate mcrypt.ini and open the mcrypt.ini file\n    sudo pico /etc/php5/mods-available/mcrypt.ini\n    change the at line a extension=  eg:/usr/lib/php5/20121212/mcrypt.so\n    save changes.\n    execute the command:  sudo php5enmod mcrypt\n    Now restart the apache server again and test PGA web-interface.   Q10.  When tried to login or create a new user account an Error is thrown which is similar to PHP Fatal error:  SOAP-ERROR: Parsing WSDL: Couldn't load from...\n     Answer:   If you face this kind of an error first check whether you have enabled PHP SOAP and OpenSSL extensions. If even after enabling them the issue is still occurring try updating the PHP OpenSSL extension. (Using command like yum update openssl)", 
            "title": "Troubleshooting FAQ"
        }, 
        {
            "location": "/Contact-Us/", 
            "text": "Contact Us\n\n\nFor your clarifications, Questions and Suggestions please contact us through\n\nAiravata mailing list\n\n\nOR\n\n\nHipChat\n\n\nIssue Reporting\nAny issue encounterered with Airavata or our gateway please log through;\n\nAiravata JIRA\n\nNOTE: If you don't have an account in Apache JIRA you have to create one prior to submitting issues.", 
            "title": "Contact Us"
        }, 
        {
            "location": "/Contact-Us/#contact-us", 
            "text": "For your clarifications, Questions and Suggestions please contact us through Airavata mailing list  OR  HipChat  Issue Reporting\nAny issue encounterered with Airavata or our gateway please log through; Airavata JIRA \nNOTE: If you don't have an account in Apache JIRA you have to create one prior to submitting issues.", 
            "title": "Contact Us"
        }
    ]
}